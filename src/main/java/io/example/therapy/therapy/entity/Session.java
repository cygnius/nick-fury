package io.example.therapy.therapy.entity;

import java.time.LocalDateTime;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;

import io.example.therapy.therapy.converter.LocalDateTimeConverter;
import jakarta.validation.constraints.NotNull;
import lombok.Data;

@Data
@DynamoDBTable(tableName = "session")
public class Session {

    @DynamoDBHashKey(attributeName = "sessionId")
    @NotNull
    @DynamoDBAutoGeneratedKey
    private String sessionId; // Unique session identifier

    @DynamoDBIndexHashKey(globalSecondaryIndexName="TherapistEmailIndex")
    @DynamoDBAttribute(attributeName = "therapistEmail")
    @NotNull
    private String therapistEmail;

    @DynamoDBIndexHashKey(globalSecondaryIndexName="ClientEmailIndex")
    @DynamoDBAttribute(attributeName = "clientEmail")
    private String clientEmail; // Optional; null for sessions open to all clients

    @DynamoDBIndexHashKey(globalSecondaryIndexName="SessionDateIndex")
    @DynamoDBAttribute(attributeName = "sessionDate")
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    @NotNull
    private LocalDateTime sessionDate;

    @DynamoDBAttribute(attributeName = "privateNotes")
    private String privateNotes;

    @DynamoDBAttribute(attributeName = "sharedNotes")
    private String sharedNotes;

    @DynamoDBAttribute(attributeName = "isOpen")
    @NotNull
    private Boolean isOpen; // Indicates if the session is open for any client
}
